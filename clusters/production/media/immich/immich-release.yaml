apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: default
spec:
  replicas: 1
  strategy:
    rollingUpdate: null
    type: Recreate
  selector:
    matchLabels:
      app: immich-server
  template:
    metadata:
      labels:
        app: immich-server
    spec:
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:v1.136.0 # {"$imagepolicy": "flux-system:immich-server"}
          resources:
            limits:
              nvidia.com/gpu: 1
          ports:
            - containerPort: 2283
          volumeMounts:
            - name: photo
              mountPath: /usr/src/app/photo
            - name: upload-location
              mountPath: /usr/src/app/upload
          #  - name: dri
          #    mountPath: /dev/dri
          env:
            - name: DB_HOSTNAME
              value: immich-database
            - name: REDIS_HOSTNAME
              value: immich-redis
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-db-secret
                  key: db_password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-db-secret
                  key: db_username
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-db-secret
                  key: db_database_name
          readinessProbe:
            httpGet:
              path: /health
              port: 2283
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: upload-location
          persistentVolumeClaim:
            claimName: pvc-immich-data
        - name: photo
          persistentVolumeClaim:
            claimName: pvc-photo
      #  - name: dri
      #    hostPath:
      #      path: /dev/dri
---
apiVersion: v1
kind: Service
metadata:
  name: immich-server
  namespace: default
spec:
  selector:
    app: immich-server
  ports:
    - protocol: TCP
      port: 2283
      targetPort: 2283
